__author__ = 'Соболев Антон'

# Задание-1:
# Матрицы в питоне реализуются в виде вложенных списков:
# Пример. Дано:
matrix = [[1, 0, 8],
          [3, 4, 1],
          [0, 4, 2]]
          
# Выполнить поворот (транспонирование) матрицы
# Пример. Результат:
# matrix_rotate = [[1, 3, 0],
#                  [0, 4, 4],
#                  [8, 1, 2]]

# Суть сложности hard: Решите задачу в одну строку

print(f'{"-"*5} Задание-1 {"-"*5}')

print(list(map(list, zip(*matrix))))

print([[matrix[i][j] for i in range(len(matrix))] for j in range(len(matrix[0]))])


# Задание-2:
# Найдите наибольшее произведение пяти последовательных цифр в 1000-значном числе.
# Выведите произведение и индекс смещения первого числа последовательных 5-ти цифр.
# Пример 1000-значного числа:

print(f'\n{"-"*5} Задание-2 {"-"*5}')

number = """
73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450"""


def mul_number(num):
    num_m = 1
    for i in num:
        num_m *= int(i)
    return num_m


number_1 = ''.join(number.split())

mul_seq = list(map(mul_number, [list(number_1[i:i + 5]) for i in range(len(number_1) - 4)]))
print(f'Наибольшее произведение пяти последовательных цифр в 1000-значном числе: {max(mul_seq)}')
print(f'Индекс смещения первого числа последовательных 5-ти цифр: {mul_seq.index(max(mul_seq))}')


# Задание-3 (Ферзи):
# Известно, что на доске 8×8 можно расставить 8 ферзей так, чтобы они не били
# друг друга. Вам дана расстановка 8 ферзей на доске.
# Определите, есть ли среди них пара бьющих друг друга.
# Программа получает на вход восемь пар чисел,
# каждое число от 1 до 8 — координаты 8 ферзей.
# Если ферзи не бьют друг друга, выведите слово NO, иначе выведите YES.

print(f'\n{"-"*5} Задание-3 {"-"*5}')

print('Разместите доске 8×8 8 ферзей так, чтобы они не били друг друга')
coor = []
while True:
    try:
        for i in range(1, 9):
            coor.append([int(xy) for xy in input(f'Введите через пробел координаты ферзя {i}: ').split(' ')])
            if coor[i - 1][0] < 1 or coor[i - 1][0] > 8 or coor[i - 1][1] < 1 or coor[i - 1][1] > 8:
                raise Exception()
        break
    except ValueError:
        print('Координаты должны быть числами и вводиться через пробел')
    except Exception as e:
        print('Координаты должны быть положительными числами от 1 до 8 и вводиться через пробел')

answer = ['YES' for i in range(len(coor)) for j in range(i + 1, len(coor)) if coor[i][0] == coor[j][0] or coor[i][1] == coor[j][1] or abs(coor[i][0] - coor[j][0]) == abs(coor[i][1] - coor[j][1])]
print('YES' if 'YES' in answer else 'NO')